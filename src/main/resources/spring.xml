<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<context:component-scan base-package="com.madrix">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<context:property-placeholder location="classpath:db.properties" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的驱动-->
		<property name="driverClass" value="${driver}"/>
		<!-- 指定连接数据库的URL-->
		<property name="jdbcUrl" value="${url}"/>
		<!-- 指定连接数据库的用户名-->
		<property name="user" value="${username}"/>
		<!-- 指定连接数据库的密码-->
		<property name="password" value="${password}"/>
		<!-- 指定连接池中保留的最大连接数. Default:15-->
		<property name="maxPoolSize" value="${maxPoolSize}"/>
		<!-- 指定连接池中保留的最小连接数-->
		<property name="minPoolSize" value="${minPoolSize}"/>
		<!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
		<property name="initialPoolSize" value="${initialPoolSize}"/>
		<!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
		<property name="maxIdleTime" value="${maxIdleTime}"/>
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
		<property name="acquireIncrement" value="${acquireIncrement}"/>
		<!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。
        但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->
		<property name="maxStatements" value="${maxStatements}"/>
		<!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
		<property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}"/>
	</bean>

	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource / typeAliasesPackage -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:com/madrix/mapper/*.xml">
		</property>
	</bean>

	<!-- mybatis spring sqlSessionTemplate,使用时直接让spring注入即可 -->
	<!--
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	-->

	<!-- 3. mybatis自动扫描加载Sql映射文件 : MapperScannerConfigurer sqlSessionFactory
		/ basePackage -->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.madrix.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>



	<!-- 4. 事务管理 : DataSourceTransactionManager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>



	<!-- 5. 使用声明式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!--spring 工具类-->
	<bean id="springContextUtil" class="com.madrix.util.SpringContextUtil"/>

</beans>
